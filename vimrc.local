" [rails.vim] projections - typing `:Efactory users` will open the users factory
let g:rails_projections = {
      \ "spec/factories/*_factory.rb": {
      \   "command":   "factory",
      \   "affinity":  "collection",
      \   "alternate": "app/models/%i.rb",
      \   "related":   "spec/models/%i_spec.rb",
      \   "test":      "spec/models/%i_spec.rb",
      \   "template":  "FactoryGirl.define do\n  factory :%i do\n  end\nend",
      \   "keywords":  "factory sequence"
      \ },
      \ "spec/models/*_spec.rb": {
      \   "related":   "spec/factories/%i_factory.rb"
      \ }
      \}

" NeoMake
let g:neomake_javascript_enabled_makers = ['eslint']
let g:neomake_javascript_eslint_exe = './node_modules/.bin/eslint'
autocmd BufWritePost * Neomake " Lint check when save
" let g:neomake_open_list = 2 " Open errors windows
let g:neomake_logfile='/tmp/neomake_error.log'

" Tagbar
map <Leader>b :TagbarToggle<CR>

" Flow check
" let g:flow#errjmp=1

" function! AirlineInit()
"   let g:airline_section_a = airline#section#create(['mode'])
"   let g:airline_section_b = airline#section#create_left(['file'])
"   let g:airline_section_c = airline#section#create([])
" endfunction
"
" autocmd User AirlineAfterInit call AirlineInit()

" let NERDTreeShowHidden=1
highlight LineNr ctermfg=white
highlight Visual ctermfg=blue ctermbg=white
" set relativenumber
set autoread
let g:indentLine_color_term = 239
syntax on

" For Neovim 0.1.3 and 0.1.4
let $NVIM_TUI_ENABLE_TRUE_COLOR=1

" Or if you have Neovim >= 0.1.5
if (has("termguicolors"))
 set termguicolors
endif

" Theme
syntax enable
colorscheme OceanicNext

let g:solarized_termtrans = 1
let g:move_map_keys = 0
vmap <C-j> <Plug>MoveBlockDown
vmap <C-k> <Plug>MoveBlockUp
let test#strategy = "dispatch"
set clipboard=unnamed
set ic " case insensitive search

" Format JS
let g:jsx_ext_required = 0

" Common
map <Leader>tf :NERDTreeFind<CR>
vmap p "_dp
map <C-c> "*y<CR>
nmap <Leader>cf :let @*=expand("%")<CR>
map <C-a> <ESC>gg<S-v>G<ESC>
nnoremap <Leader>ag :Ag!<Space>
if exists('g:ag_highlight')
  let @/ = matchstr(a:args, "\\v(-)\@<!(\<)\@<=\\w+|['\"]\\zs.{-}\\ze['\"]")
  call feedkeys(":let &hlsearch=1 \| echo \<CR>", 'n')
endif
map <Leader>bi :PlugInstall<CR>
map <Leader>ct :Start! ctags -R "."<CR>
map <Leader>fs :FixWhitespace<CR>
map <Leader>n <C-w>v<C-h><SPACE><SPACE>
map <Leader>nt :NERDTree<CR>
map <Leader>q :q<CR>
map <Leader>rm :Remove!<CR>
map <Leader>sg :sp<CR>:grep<SPACE>
map <Leader>sv :source ~/.vimrc<CR>
map <Leader>te :tabe<SPACE>
map <Leader>v "*p<CR>
map <Leader>h :browse old<CR>
map <Leader>vi :tabe ~/.vimrc.local<CR>
map <Leader>bd :tabe ~/.vimrc.bundles.local<CR>
map <Leader>w :w<CR>
nmap <CR> o<Esc>k
nnoremap <S-CR> O<Esc>j
map <Leader>k :Ag! <cword><CR>
map <Leader>cv :REview <C-r><C-w>.html.haml
map <Leader>e /\<
map <Leader>cs :!git status --porcelain \| cut -c4- \| grep '.rb' \| xargs rubocop<CR>
vmap u .
vmap U .
nnoremap <C-]> :CtrlPtjump<cr>
vnoremap <C-]> :CtrlPtjumpVisual<cr>

" Search
nmap fs :Ag! "<cword>" -G "\.(css\|scss)" --ignore "*.min.css" --ignore-dir "app/assets/stylesheets/components" --ignore-dir "app/assets/webpack"<CR>
nmap fj :Ag! "<cword>" -G "\.js" --ignore "*.min.js" --ignore-dir "app/assets/javascripts/components" --ignore-dir "app/assets/webpack"<CR>
nmap fr :Ag! "<cword>" -G "\.rb"<CR>
nmap fv :Ag! "<cword>" -G "\.(haml\|erb)"<CR>
nmap fm :Ag! "<cword>" -G "\.rb" -r "app/models"<CR>
nmap fc :Ag! "<cword>" -G "\.rb" -r "app/controllers"<CR>
nmap fa :Ag! "<cword>" -G "\.(rb\|erb\|js\|css\|scss\|yml\|rake\|haml)" --ignore "*.min.*" --ignore-dir "app/assets/javascripts/components" --ignore-dir "app/assets/stylesheets/components" --ignore-dir "app/assets/webpack"<CR>

" Gif config
map  / <Plug>(easymotion-sn)
omap / <Plug>(easymotion-tn)

" These `n` & `N` mappings are options. You do not have to map `n` & `N` to EasyMotion.
" Without these mappings, `n` & `N` works fine. (These mappings just provide
" different highlight method and have some other features )
map  n <Plug>(easymotion-next)
map  N <Plug>(easymotion-prev)

" Git
map <Leader>co :Gread<CR>
map <Leader>ga :Gwrite<CR>
map <Leader>gac :Gcommit -am ""<LEFT>
map <Leader>gb :Gblame<CR>
map <Leader>gc :Gcommit -m ""<LEFT>
map <Leader>gd :Gvdiff<CR>
map <Leader>gm :Gmove<SPACE>
map <Leader>gr :Gremove<CR>
map <Leader>gs :Gstatus<CR>
map <Leader>go :Gbrowse<CR>

" React
" Trigger configuration (Optional)
let g:UltiSnipsExpandTrigger="<C-l>"
let g:closetag_filenames = "*.html,*.xhtml,*.phtml,*.php,*.jsx,*.js" "closetag

" Rails
map <Leader>a <ESC>ggVG<CR>
map <Leader>ac :Scontroller application<CR>
map <Leader>ah :Vhelper application<CR>
map <Leader>aj <ESC>:e app/assets/javascripts/application.js<CR>
map <Leader>as <ESC>:e app/assets/stylesheets/application.scss<CR>
map <Leader>av :AV<CR>
map <Leader>bb :!bundle install<CR>
map <Leader>c :Scontroller<SPACE>
map <Leader>d <ESC>obyebug<ESC>
map <Leader>dv <ESC>o- byebug<ESC>
map <Leader>db :e config/database.yml<CR>
map <Leader>g :e Gemfile<CR>
map <Leader>m :Smodel<SPACE>
map <Leader>rt :e config/routes.rb<CR>
map <Leader>art :e config/routes/admin.rb<CR>
map <Leader>rv :RV<CR>
map <Leader>sc :sp db/schema.rb<CR>
map <Leader>vc :Vcontroller<SPACE>
map <Leader>va :e app/controllers/api/v1/
map <Leader>vf :e app/forms/
map <Leader>vm :Vmodel<SPACE>
map <Leader>vv :Vview<SPACE>
map <Leader>bc :Scontroller<SPACE>
map <Leader>bm :Smodel<SPACE>
map <Leader>bv :Sview<SPACE>
map <Leader>sf :Sfactory<SPACE>
map <Leader>vp :e app/policies/
xmap ga <Plug>(EasyAlign)
map <Leader>rf :e config/routes/
map <Leader>cp :Rextract<SPACE>
vmap <Leader>f :MultipleCursorsFind<SPACE>
let g:rubycomplete_buffer_loading = 1
let g:rubycomplete_rails = 1
highlight ExtraWhitespace ctermbg=white
autocmd BufWritePre * StripWhitespace
nnoremap <silent> P :GitGrepCurrentPartial<CR>

" NERDTree
" let g:NERDTreeDirArrowExpandable = "📂"
" let g:NERDTreeDirArrowCollapsible = "<"
" let g:WebDevIconsNerdTreeAfterGlyphPadding = ''

" Gitgutter
" let g:gitgutter_sign_added = '🍀'
" let g:gitgutter_sign_modified = '🍌'
" let g:gitgutter_sign_removed = '⊗'
" let g:gitgutter_sign_modified_removed = '+-'

" Find
let g:ctrlp_tjump_shortener = ['/.*/gems/', '.../', '/.js', '/.jsx']
let g:ctrlp_tjump_only_silent = 1
let g:ctrlp_tjump_skip_tag_name = 1

set clipboard=unnamed

" Jest to test javascript
map <Leader>tj :!yarn jest %<CR>
